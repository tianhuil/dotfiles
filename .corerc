alias ipy='ipython --pdb'
alias qtconsole='"ipython" qtconsole --pylab=inline'

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p' # make parent directories as needed

# ls aliases - use eza if available, otherwise fallback to ls
if command -v eza &>/dev/null; then
  alias ls='eza --icons=auto --group-directories-first --no-symlinks -x'
  alias ll='eza -l'
  alias la='eza -la'
else
  alias ls='ls -h -G'
  alias ll='ls -l'
  alias la='ls -A'
fi
alias l='ls -CF'
alias svim='sudo vim'
alias h='cd'
alias ..='cd ..'
alias cd..='cd ..'
alias ...='cd ../..'
alias cim='vim'
alias back='cd $OLDPWD'
alias root='sudo su'
alias runlevel='sudo /sbin/init'
alias grep='grep --color=auto'
alias dfh='df -h'
alias gvim='gvim -geom 84x26'
alias start='dbus-launch startx'
alias sha1='openssl sha1'
alias gt='git tree'
alias gtr='git tree'
alias gtra='git tree-all'
alias gs='git status'

alias void='/Applications/Void.app/Contents/MacOS/Electron'

# supabase
alias sb='supabase'

# further npm / yarn aliases
alias yw='yarn workspace'

# homebrew
if [ -f "/opt/homebrew/bin/brew" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

function clean-docker() {
  # Clean docker
  if [[ $(docker ps -a -q) ]]; then
    docker rm $(docker ps -a -q)
  fi

  if [[ $(docker images -q) ]] ; then
    docker rmi $(docker images -q)
  fi

  if [[ $(docker volume ls -q |awk '{print $2}') ]] ; then
    docker volume rm $(docker volume ls -q |awk '{print $2}')
  fi
  if [[ "$OSTYPE" == "darwin"* ]]; then  # OSX
    rm -rf ~/Library/Containers/com.docker.docker/Data/*
  fi
}

if [[ "$OSTYPE" == "darwin"* && -f ~/Applications/ngrok && ! -f /usr/local/bin/ngrok ]]; then  # OSX
  ln -s ~/Applications/ngrok /usr/local/bin/ngrok
fi

# Set variables for NPM.  Based on https://gist.github.com/DanHerbert/9520689
export NPM_PACKAGES="$HOME/.npm-packages"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
export PATH="$PATH:$NPM_PACKAGES/bin"  # npm packages should have lower priority

# .local/bin
if [ -d "$HOME/.local/bin" ]; then
  export PATH=$PATH:$HOME/.local/bin
fi

# Poetry
if [ -d "$HOME/.local/bin" ]; then
  export PATH=$PATH:$HOME/.local/bin
fi

# Pyenv
if [ -d "$HOME/.pyenv" ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

# Go
if [ -x "$(command -v go)" ]; then
  export GOPATH=$(go env GOPATH)  # 80 ms
  export PATH=$PATH:$GOPATH/bin  # go packages should have lower priority
fi

# Java
if [ -d "/opt/homebrew/opt/openjdk/bin" ]; then
  export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
fi

# libpq
if [ -d "/opt/homebrew/opt/libpq/bin" ]; then
  export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
fi

# sqlite
if [ -d "/opt/homebrew/opt/sqlite/bin" ]; then
  export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"
fi

# bun
if [ -d "/Users/tianhuil/.bun/bin" ]; then
  export PATH="/Users/tianhuil/.bun/bin:$PATH"
fi

# uv
if [ -d "/Users/tianhuil/.pyenv/versions/3.12.0/bin/" ]; then
  export PATH="/Users/tianhuil/.pyenv/versions/3.12.0/bin/:$PATH"
fi

# editor
if [ -x "$(command -v cursor)" ]; then
  export VISUAL=cursor
  export EDITOR=cursor
elif [ -x "$(command -v code)" ]; then
  export VISUAL=code
  export EDITOR=code
elif [ -x "$(command -v emacs)" ]; then
  export VISUAL=emacs
  export EDITOR=emacs
else
  export VISUAL=vi
  export EDITOR=vi
fi

# 1password
if [ -f "$HOME/.config/op/plugins.sh" ]; then
  source $HOME/.config/op/plugins.sh
fi

# nvm 
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# ngrok
if command -v ngrok &>/dev/null; then
  eval "$(ngrok completion)"
fi

# fzf
if command -v fzf &>/dev/null; then
  $(brew --prefix)/opt/fzf/install --no-bash --no-fish --completion --key-bindings --no-update-rc >/dev/null 2>&1
fi

# Create a new tab in Warp with the current directory
warp() {
  local target_path="${1:-.}"
  open "warp://action/new_tab?path=$(cd "$target_path" && pwd)"
}
